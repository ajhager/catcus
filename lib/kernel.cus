JS: clear
	"catcus = [];"
end

JS: exit
	"process.exit();"
end

JS: add
	"catcus.push(catcus.pop() + catcus.pop());"
end

JS: inc
	"catcus.push(catcus.pop() + 1);"
end

JS: sub
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() - catcus1);"
end

JS: dec
	"catcus.push(catcus.pop() - 1);"
end

JS: mul
	"catcus.push(catcus.pop() * catcus.pop());"
end

JS: div
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() / catcus1);"
end

JS: mod
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() % catcus1);"
end

JS: print
	"console.log(catcus.pop());"
end

JS: eq
	"catcus.push(catcus.pop() === catcus.pop());"
end

JS: neq
	"catcus.push(catcus.pop() !== catcus.pop());"
end

JS: lt
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() < catcus1);"
end

JS: lte
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() <= catcus1);"
end

JS: gt
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() > catcus1);"
end

JS: gte
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() >= catcus1);"
end

JS: and
	"catcus.push(catcus.pop() && catcus.pop());"
end

JS: or
	"catcus.push(catcus.pop() || catcus.pop());"
end

JS: not
	"catcus.push(!catcus.pop());"
end

JS: AND
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() & catcus1);"
end

JS: OR
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() | catcus1);"
end

JS: NOT
	"catcus.push(~catcus.pop());"
end

JS: XOR
	"catcus.push(^catcus.pop());"
end

JS: LSHIFT
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() << catcus1);"
end

JS: RSHIFT
	"catcus1 = catcus.pop();"
	"catcus.push(catcus.pop() >> catcus1);"
end

JS: dup
	"catcus1 = catcus.pop();"
	"catcus.push(catcus1);"
	"catcus.push(catcus1);"
end

JS: dup2
	"catcus1 = catcus.pop();"
	"catcus2 = catcus.pop();"
	"catcus.push(catcus2);"
	"catcus.push(catcus1);"
	"catcus.push(catcus2);"
	"catcus.push(catcus1);"
end

JS: dup3
	"catcus1 = catcus.pop();"
	"catcus2 = catcus.pop();"
	"catcus3 = catcus.pop();"
	"catcus.push(catcus3);"
	"catcus.push(catcus2);"
	"catcus.push(catcus1);"
	"catcus.push(catcus3);"
	"catcus.push(catcus2);"
	"catcus.push(catcus1);"
end

JS: dup4
	"catcus1 = catcus.pop();"
	"catcus2 = catcus.pop();"
	"catcus3 = catcus.pop();"
	"catcus4 = catcus.pop();"
	"catcus.push(catcus4);"
	"catcus.push(catcus3);"
	"catcus.push(catcus2);"
	"catcus.push(catcus1);"
	"catcus.push(catcus4);"
	"catcus.push(catcus3);"
	"catcus.push(catcus2);"
	"catcus.push(catcus1);"
end

JS: drop
	"catcus.pop();"
end

JS: drop2
	"catcus.pop();"
	"catcus.pop();"
end

JS: drop3
	"catcus.pop();"
	"catcus.pop();"
	"catcus.pop();"
end

JS: drop4
	"catcus.pop();"
	"catcus.pop();"
	"catcus.pop();"
	"catcus.pop();"
end

JS: swap
	"catcus1 = catcus.pop();"
	"catcus2 = catcus.pop();"
	"catcus.push(catcus1);"
	"catcus.push(catcus2);"
end

JS: nip
	"catcus1 = catcus.pop();"
	"catcus.pop();"
	"catcus.push(catcus1);"
end

JS: nip2
	"catcus1 = catcus.pop();"
	"catcus.pop();"
	"catcus.pop();"
	"catcus.push(catcus1);"
end
	
JS: over
	"catcus1 = catcus.pop();"
	"catcus2 = catcus.pop();"
	"catcus.push(catcus2);"
	"catcus.push(catcus1);"
	"catcus.push(catcus2);"
end

JS: over2
	"catcus1 = catcus.pop();"
	"catcus2 = catcus.pop();"
	"catcus3 = catcus.pop();"
	"catcus.push(catcus3);"
	"catcus.push(catcus2);"
	"catcus.push(catcus1);"
	"catcus.push(catcus3);"
	"catcus.push(catcus2);"
end

JS: pick
	"catcus1 = catcus.pop();"
	"catcus2 = catcus.pop();"
	"catcus3 = catcus.pop();"
	"catcus.push(catcus3);"
	"catcus.push(catcus2);"
	"catcus.push(catcus1);"
	"catcus.push(catcus3);"
end

JS: rot
	"catcus1 = catcus.pop();"
	"catcus2 = catcus.pop();"
	"catcus3 = catcus.pop();"
	"catcus.push(catcus2);"
	"catcus.push(catcus1);"
	"catcus.push(catcus3);"
end
